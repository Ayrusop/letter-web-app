{"ast":null,"code":"var _jsxFileName = \"E:\\\\letter-web-app\\\\frontend\\\\src\\\\components\\\\LetterEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useEditor, EditorContent } from \"@tiptap/react\";\nimport StarterKit from \"@tiptap/starter-kit\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LetterEditor = ({\n  onSave\n}) => {\n  _s();\n  const editor = useEditor({\n    extensions: [StarterKit],\n    content: \"<p>Start writing your letter...</p>\",\n    onUpdate: ({\n      editor\n    }) => {\n      const content = editor.getHTML();\n      onSave(content);\n      saveDraft(content);\n    }\n  });\n\n  // Load the latest draft when the component mounts\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/letters/latest\").then(res => {\n      if (editor && res.data.content) {\n        editor.commands.setContent(res.data.content);\n      }\n    });\n  }, [editor]);\n\n  // Save draft to the backend\n  const saveDraft = async content => {\n    try {\n      await axios.post(\"http://localhost:5000/api/letters\", {\n        content\n      });\n    } catch (error) {\n      console.error(\"Error saving draft:\", error);\n    }\n  };\n  const uploadToGoogleDrive = async content => {\n    const formData = new FormData();\n    formData.append(\"file\", new Blob([content], {\n      type: \"text/plain\"\n    }));\n    try {\n      const response = await fetch(\"http://localhost:5000/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      console.log(\"Uploaded File ID:\", data.fileId);\n    } catch (error) {\n      console.error(\"Upload Failed:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Write Your Letter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #ccc\",\n        padding: \"10px\",\n        minHeight: \"200px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(EditorContent, {\n        editor: editor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(LetterEditor, \"WZCukF8Lohz+YFud2L+u9c9a75g=\", false, function () {\n  return [useEditor];\n});\n_c = LetterEditor;\nexport default LetterEditor;\nvar _c;\n$RefreshReg$(_c, \"LetterEditor\");","map":{"version":3,"names":["React","useEffect","useEditor","EditorContent","StarterKit","axios","jsxDEV","_jsxDEV","LetterEditor","onSave","_s","editor","extensions","content","onUpdate","getHTML","saveDraft","get","then","res","data","commands","setContent","post","error","console","uploadToGoogleDrive","formData","FormData","append","Blob","type","response","fetch","method","body","json","log","fileId","children","fileName","_jsxFileName","lineNumber","columnNumber","style","border","padding","minHeight","_c","$RefreshReg$"],"sources":["E:/letter-web-app/frontend/src/components/LetterEditor.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useEditor, EditorContent } from \"@tiptap/react\";\r\nimport StarterKit from \"@tiptap/starter-kit\";\r\nimport axios from \"axios\";\r\n\r\nconst LetterEditor = ({ onSave }) => {\r\n    const editor = useEditor({\r\n        extensions: [StarterKit],\r\n        content: \"<p>Start writing your letter...</p>\",\r\n        onUpdate: ({ editor }) => {\r\n            const content = editor.getHTML();\r\n            onSave(content);\r\n            saveDraft(content);\r\n        },\r\n    });\r\n\r\n    // Load the latest draft when the component mounts\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:5000/api/letters/latest\").then((res) => {\r\n            if (editor && res.data.content) {\r\n                editor.commands.setContent(res.data.content);\r\n            }\r\n        });\r\n    }, [editor]);\r\n\r\n    // Save draft to the backend\r\n    const saveDraft = async (content) => {\r\n        try {\r\n            await axios.post(\"http://localhost:5000/api/letters\", { content });\r\n        } catch (error) {\r\n            console.error(\"Error saving draft:\", error);\r\n        }\r\n    };\r\n    const uploadToGoogleDrive = async (content) => {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", new Blob([content], { type: \"text/plain\" }));\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/upload\", {\r\n                method: \"POST\",\r\n                body: formData,\r\n            });\r\n\r\n            const data = await response.json();\r\n            console.log(\"Uploaded File ID:\", data.fileId);\r\n        } catch (error) {\r\n            console.error(\"Upload Failed:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Write Your Letter</h2>\r\n            <div\r\n                style={{\r\n                    border: \"1px solid #ccc\",\r\n                    padding: \"10px\",\r\n                    minHeight: \"200px\",\r\n                }}\r\n            >\r\n                <EditorContent editor={editor} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LetterEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}